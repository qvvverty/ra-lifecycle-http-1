{"version":3,"sources":["components/Clock/Clock.jsx","components/ClockForm.jsx","components/WorldTime.jsx","App.js","reportWebVitals.js","index.js"],"names":["Clock","state","hour","minute","second","now","Date","newState","getUTCHours","this","props","hourShift","getMinutes","getSeconds","setState","id","deleteClock","setClockHands","interval","setInterval","bind","clearInterval","className","onClick","clockDeleteHandler","city","style","transform","Component","ClockForm","defaultState","event","preventDefault","isNaN","addClock","target","name","value","onSubmit","submitHandler","htmlFor","type","onChange","inputHandler","WorldTime","clocks","nanoid","newClock","clockId","foundIndex","findIndex","clock","splice","map","key","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.47fe5d2a.chunk.js","sourcesContent":["import { Component } from 'react';\n\nexport default class Clock extends Component {\n  state = {\n    hour: -90,\n    minute: -90,\n    second: -90\n  }\n\n  setClockHands() {\n    const now = new Date();\n    const hours = now.getUTCHours() > 12 ? now.getUTCHours() - 12 : now.getUTCHours();\n    const newState = {\n      hour: -90 + (hours + this.props.hourShift) * 30 + 0.5 * now.getMinutes(),\n      minute: -90 + now.getMinutes() * 6 + 0.1 * now.getSeconds(),\n      second: -90 + now.getSeconds() * 6\n    }\n\n    this.setState(newState);\n  }\n\n  clockDeleteHandler(id) {\n    this.props.deleteClock(this.props.id);\n  }\n\n  componentDidMount() {\n    this.setClockHands();\n    this.interval = setInterval(this.setClockHands.bind(this), 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  render() {\n    return (\n      <div className=\"clock-container\">\n        <div className=\"clock-delete\" onClick={this.clockDeleteHandler.bind(this)}>✗</div>\n        <div className=\"clock-name\">{this.props.city}</div>\n        <div className=\"clock\">\n          <div className=\"hour-hand\" style={{ transform: `rotate(${this.state.hour}deg)` }}>\n            <div className=\"hour-hand-invisible\" />\n            <div className=\"hour-hand-visible\" />\n          </div>\n          <div className=\"minute-hand\" style={{ transform: `rotate(${this.state.minute}deg)` }}>\n            <div className=\"minute-hand-invisible\" />\n            <div className=\"minute-hand-visible\" />\n          </div>\n          <div className=\"second-hand\" style={{ transform: `rotate(${this.state.second}deg)` }}>\n            <div className=\"second-hand-invisible\" />\n            <div className=\"second-hand-visible\" />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n","import { Component } from 'react'\n\nexport default class ClockForm extends Component {\n  defaultState = {\n    city: '',\n    hourShift: ''\n  }\n\n  state = this.defaultState;\n\n  submitHandler(event) {\n    event.preventDefault();\n    if (this.state.city && !isNaN(this.state.hourShift)) {\n      this.props.addClock({ ...this.state, hourShift: +this.state.hourShift });\n      this.setState(this.defaultState);\n    }\n  }\n\n  inputHandler(event) {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  render() {\n    const state = this.state;\n\n    return (\n      <form onSubmit={this.submitHandler.bind(this)} className=\"clock-form\">\n        <div>\n          <label className=\"clock-form-label\" htmlFor=\"name\">Город</label>\n          <input\n            className=\"clock-form-input\"\n            type=\"text\"\n            id=\"city\"\n            name=\"city\"\n            onChange={this.inputHandler.bind(this)}\n            value={state.city}\n          />\n        </div>\n        <div>\n          <label className=\"clock-form-label\" htmlFor=\"timezone\">Временная зона</label>\n          <input\n            className=\"clock-form-input\"\n            type=\"text\"\n            id=\"hourShift\"\n            name=\"hourShift\"\n            onChange={this.inputHandler.bind(this)}\n            value={state.hourShift}\n          />\n        </div>\n        <button className=\"clock-form-button\">Добавить</button>\n      </form>\n    )\n  }\n}\n","import { Component } from 'react';\nimport { nanoid } from 'nanoid';\nimport Clock from './Clock/Clock';\nimport ClockForm from './ClockForm';\n\nexport default class WorldTime extends Component {\n  state = {\n    clocks: [\n      { city: 'Лондон', hourShift: 0, id: nanoid(5) },\n      { city: 'Москва', hourShift: 3, id: nanoid(5) }\n    ]\n  };\n\n  addClock(newClock) {\n    newClock.id = nanoid(5);\n    this.setState({ clocks: [...this.state.clocks, newClock] });\n  }\n\n  deleteClock(clockId) {\n    const newState = {...this.state};\n    const foundIndex = newState.clocks.findIndex(clock => clock.id === clockId);\n    newState.clocks.splice(foundIndex, 1);\n    this.setState(newState);\n  }\n\n  render() {\n    return (\n      <div>\n        <ClockForm addClock={this.addClock.bind(this)} />\n        <div className=\"clock-widget-wrapper\">\n          {this.state.clocks.map(clock => <Clock {...clock} deleteClock={this.deleteClock.bind(this)} key={clock.id} />)}\n        </div>\n      </div>\n    )\n  }\n}\n","import './App.css';\nimport WorldTime from './components/WorldTime';\n\nfunction App() {\n  return (\n    <WorldTime />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}